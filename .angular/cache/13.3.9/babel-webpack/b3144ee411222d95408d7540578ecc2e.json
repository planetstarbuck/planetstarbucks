{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../save.service\";\nimport * as i3 from \"../list.service\";\nimport * as i4 from \"../token-storage.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../feed-shell/feed-shell.component\";\n\nfunction UserComponent_div_0_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 9)(2, \"b\");\n    i0.ɵɵelement(3, \"i\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const sublist_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", sublist_r4.subListCreator, \"'s lists\");\n  }\n}\n\nfunction UserComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UserComponent_div_0_div_3_div_1_Template, 5, 1, \"div\", 8);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const list_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 1, list_r2.sublist, 0, 1));\n  }\n}\n\nfunction UserComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵelement(2, \"p\");\n    i0.ɵɵtemplate(3, UserComponent_div_0_div_3_Template, 3, 5, \"div\", 8);\n    i0.ɵɵpipe(4, \"slice\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(4, 1, ctx_r0.lists, 0, 1));\n  }\n}\n\nexport let UserComponent = /*#__PURE__*/(() => {\n  class UserComponent {\n    constructor(route, saveService, listService, tokenStorageService, location) {\n      this.route = route;\n      this.saveService = saveService;\n      this.listService = listService;\n      this.tokenStorageService = tokenStorageService;\n      this.location = location;\n      this.lists = [];\n      this.roles = [];\n      this.isLoggedIn = false;\n      this.showDropLink = false;\n      this.button_text = \"SAVE\";\n    }\n\n    goBack() {\n      this.location.back();\n    }\n\n    addToSaved(saved_id) {\n      this.tokenStorageService.addSavedList(saved_id);\n      this.saved_lists = this.tokenStorageService.getSavedList();\n      this.listService.addSaved(this.username, saved_id);\n    }\n\n    removeFromSaved(saved_id) {\n      this.tokenStorageService.removeSavedList(saved_id);\n      this.saved_lists = this.tokenStorageService.getSavedList();\n      const user = this.tokenStorageService.getUser();\n      const username = user.username;\n      this.listService.removeSaved(username, saved_id);\n    }\n\n    getListsByUser() {\n      const user2 = this.route.snapshot.paramMap.get('user');\n      console.log(\"de user = \" + user2);\n      this.listService.getListsByUser(user2).subscribe(lists => {\n        this.lists = lists;\n        this.startup = false;\n      });\n    }\n\n    ngOnInit() {\n      this.startup = true; // dit is handig om bij SAVE enzo weer op dezelfde page uit te komen na inloggen\n\n      this.tokenStorageService.redirectUrl = this.route.snapshot['_routerState'].url;\n      this.getListsByUser();\n      this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n      if (this.isLoggedIn) {\n        this.saved_lists = this.tokenStorageService.getSavedList();\n        const user = this.tokenStorageService.getUser();\n        this.roles = user.roles;\n        this.showDropLink = true;\n        this.username = user.username;\n      }\n    }\n\n  }\n\n  UserComponent.ɵfac = function UserComponent_Factory(t) {\n    return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SaveService), i0.ɵɵdirectiveInject(i3.ListService), i0.ɵɵdirectiveInject(i4.TokenStorageService), i0.ɵɵdirectiveInject(i5.Location));\n  };\n\n  UserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserComponent,\n    selectors: [[\"app-user\"]],\n    decls: 6,\n    vars: 8,\n    consts: [[\"class\", \"pt-3\", 4, \"ngIf\"], [3, \"lists\", \"saved_lists\", \"button_text\", \"startup\", \"isLoggedIn\", \"unSaveEvent\", \"saveEvent\"], [1, \"fixed-bottom\"], [1, \"p-2\", \"pb-3\", \"d-flex\", \"justify-content-start\"], [1, \"btn-dark\", \"btn\", \"m-4\", \"d-xl-none\", 3, \"click\"], [1, \"bi-arrow-left\", 2, \"font-size\", \"16px\", \"color\", \"white\"], [1, \"pt-3\"], [1, \"card\", \"border-0\", \"mx-auto\", 2, \"width\", \"90%\", \"max-width\", \"22rem\", \"background-color\", \"#F0F7FE\"], [4, \"ngFor\", \"ngForOf\"], [\"mr-auto\", \"\", 1, \"text\", \"text-muted\", \"pr-1\"], [1, \"ps-3\", \"pe-1\", \"bi\", \"bi-person-lines-fill\"]],\n    template: function UserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, UserComponent_div_0_Template, 5, 5, \"div\", 0);\n        i0.ɵɵelementStart(1, \"app-feed-shell\", 1);\n        i0.ɵɵlistener(\"unSaveEvent\", function UserComponent_Template_app_feed_shell_unSaveEvent_1_listener($event) {\n          return ctx.removeFromSaved($event);\n        })(\"saveEvent\", function UserComponent_Template_app_feed_shell_saveEvent_1_listener($event) {\n          return ctx.addToSaved($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"span\", 3)(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function UserComponent_Template_button_click_4_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.lists.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"lists\", ctx.lists)(\"lists\", ctx.lists)(\"saved_lists\", ctx.saved_lists)(\"button_text\", ctx.button_text)(\"startup\", ctx.startup)(\"isLoggedIn\", ctx.isLoggedIn)(\"lists\", ctx.lists);\n      }\n    },\n    directives: [i5.NgIf, i5.NgForOf, i6.FeedShellComponent],\n    pipes: [i5.SlicePipe],\n    styles: [\"\"]\n  });\n  return UserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}