{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let FeedShellComponent = /*#__PURE__*/(() => {\n  class FeedShellComponent {\n    constructor() {\n      this.isLoggedIn = false;\n      this.loading = true;\n      this.unSaveEvent = new EventEmitter();\n      this.saveEvent = new EventEmitter();\n    }\n\n    unSave(value) {\n      this.unSaveEvent.emit(value);\n    }\n\n    save(value) {\n      this.saveEvent.emit(value);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  FeedShellComponent.ɵfac = function FeedShellComponent_Factory(t) {\n    return new (t || FeedShellComponent)();\n  };\n\n  FeedShellComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FeedShellComponent,\n    selectors: [[\"app-feed-shell\"]],\n    inputs: {\n      list: \"list\",\n      isLoggedIn: \"isLoggedIn\",\n      saved_lists: \"saved_lists\",\n      loading: \"loading\"\n    },\n    outputs: {\n      unSaveEvent: \"unSaveEvent\",\n      saveEvent: \"saveEvent\"\n    },\n    decls: 2,\n    vars: 0,\n    template: function FeedShellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"feed-shell works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return FeedShellComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}