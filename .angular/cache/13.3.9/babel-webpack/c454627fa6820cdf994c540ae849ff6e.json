{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet ItemDetailsComponent = class ItemDetailsComponent {\n  constructor(route, saveService, listService, tokenStorageService, fb, location) {\n    this.route = route;\n    this.saveService = saveService;\n    this.listService = listService;\n    this.tokenStorageService = tokenStorageService;\n    this.fb = fb;\n    this.location = location;\n    this.roles = [];\n    this.isLoggedIn = false;\n    this.showDropLink = false;\n    this.isCollapsed = true;\n  }\n\n  copyToClipboard(item) {\n    navigator.clipboard.writeText(item);\n    this.copy = true;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getList() {\n    const listId = this.route.snapshot.paramMap.get('listId');\n    const creator = this.route.snapshot.paramMap.get('list_creator');\n    this.commentId = this.route.snapshot.paramMap.get('item_id'); // this.position_id = +this.route.snapshot.paramMap.get('position_id');\n\n    console.log(\"het list-id = \" + listId);\n    this.listService.getListNo404(listId).subscribe(list => {\n      this.list = list;\n      const subList = this.list.sublist;\n      const itemList = subList.map(listEl => listEl.item);\n      this.listcount = itemList.map(items => items.length);\n      console.log(this.listcount);\n      this.list.sublist = this.list.sublist.filter(sublist => sublist.subListCreator.includes(creator));\n      const sublist = this.list.sublist;\n      console.log(sublist); // console.log(typeof(this.position_id))\n      // this.position_id =  this.position_id + 1\n      // console.log(\"het position id is \" + this.position_id)\n\n      this.item = sublist[0].item.find(item => {\n        return this.commentId == item.commentId;\n      }); // console.log(this.item)\n      // // this.commentId = this.item.commentId.$uuid\n      // this.commentId = this.item.commentId\n\n      console.log(this.commentId);\n      console.log(\"het comment id is\" + this.commentId);\n      this.listService.getCommentsByItemId(this.commentId).subscribe(comment => {\n        this.comment = comment;\n      });\n\n      if (this.isLoggedIn) {\n        this.newComment.patchValue({\n          itemCommentId: this.commentId\n        });\n      }\n\n      this.loading = false;\n    });\n  }\n\n  addToSaved(saved_id) {\n    this.tokenStorageService.addSavedList(saved_id);\n    this.saved_lists = this.tokenStorageService.getSavedList();\n    this.listService.addSaved(this.username, saved_id);\n  }\n\n  removeFromSaved(saved_id) {\n    this.tokenStorageService.removeSavedList(saved_id);\n    this.saved_lists = this.tokenStorageService.getSavedList();\n    const user = this.tokenStorageService.getUser();\n    const username = user.username;\n    this.listService.removeSaved(username, saved_id);\n  }\n\n  unfollowChapter(chapter) {\n    this.listService.unfollowChapter(chapter);\n    this.tokenStorageService.removeSavedChapter(chapter);\n    const user = this.tokenStorageService.getUser();\n    this.followed_chapters = user.followed_chapters;\n  }\n\n  followChapter(chapter) {\n    this.listService.followChapter(chapter);\n    this.tokenStorageService.addSavedChapter(chapter);\n    const user = this.tokenStorageService.getUser();\n    this.followed_chapters = user.followed_chapters;\n  }\n\n  ngOnInit() {\n    this.loading = true; // dit is handig om bij SAVE enzo weer op dezelfde page uit te komen na inloggen\n\n    this.tokenStorageService.redirectUrl = this.route.snapshot['_routerState'].url;\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    this.listid = this.route.snapshot.paramMap.get('listId'); // this.position = this.route.snapshot.paramMap.get('position_id');\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser(); // this.roles = user.roles;\n\n      this.username = user.username;\n      this.followed_chapters = user.followed_chapters;\n      this.saved_lists = this.tokenStorageService.getSavedList();\n      this.showDropLink = true;\n      this.newComment = this.fb.group({\n        itemCommentId: '',\n        commentContent: ''\n      });\n    }\n\n    this.getList();\n    console.log(\"de user is \" + this.username);\n  }\n\n  onSubmit() {\n    this.isBusy = true;\n    this.listService.createComment(this.newComment.value).subscribe(comment => {\n      console.log(comment);\n      window.location.reload();\n    });\n  }\n\n};\n\n__decorate([Input()], ItemDetailsComponent.prototype, \"list\", void 0);\n\nItemDetailsComponent = __decorate([Component({\n  selector: 'app-item-details',\n  templateUrl: './item-details.component.html',\n  styleUrls: ['./item-details.component.css']\n})], ItemDetailsComponent);\nexport { ItemDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}