{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DatePipe } from '@angular/common';\nimport { authInterceptorProviders } from './auth.interceptor';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { ListDetailsComponent } from './list-details/list-details.component';\nimport { ItemDetailsComponent } from './item-details/item-details.component';\nimport { DropComponent } from './drop/drop.component';\nimport { SavedComponent } from './saved/saved.component';\nimport { CommonModule } from \"@angular/common\";\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DropupdateComponent } from './dropupdate/dropupdate.component';\nimport { ChapterComponent } from './chapter/chapter.component';\nimport { UserComponent } from './user/user.component';\nimport { SearchComponent } from './search/search.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DropsComponent } from './drops/drops.component';\nimport { ChaptersComponent } from './chapters/chapters.component';\nimport { LonglistComponent } from './longlist/longlist.component';\nimport { ListComponent } from './list/list.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { RoutingGuardGuard } from './routing-guard.guard';\nimport { RegisterSuccessComponent } from './register-success/register-success.component';\nimport { RegisterAlmostDoneComponent } from './register-almost-done/register-almost-done.component';\nimport { RegisterCheckMailComponent } from './register-check-mail/register-check-mail.component';\nimport { PasswordForgotComponent } from './password-forgot/password-forgot.component';\nimport { PasswordUpdateComponent } from './password-update/password-update.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { NewNotificationsService } from './new-notifications.service';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { provideMessaging, getMessaging } from '@angular/fire/messaging';\nimport { SupportComponent } from './support/support.component';\nimport { MarketingComponent } from './marketing/marketing.component';\nimport { PrivacypolicyComponent } from './privacypolicy/privacypolicy.component';\nimport { NgxPullToRefreshModule } from 'ngx-pull-to-refresh';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/typeahead\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/service-worker\";\nimport * as i4 from \"ngx-bootstrap/modal\";\nimport * as i5 from \"@angular/fire/app\";\nimport * as i6 from \"@angular/fire/messaging\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [authInterceptorProviders, DatePipe, NewNotificationsService],\n    imports: [[CommonModule, BrowserModule, NgbModule, ReactiveFormsModule, FormsModule, NgxPullToRefreshModule, FlexLayoutModule, ClipboardModule, TypeaheadModule.forRoot(), RouterModule.forRoot([{\n      path: '',\n      component: FeedComponent\n    }, {\n      path: 'drop/:listId',\n      component: DropupdateComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'drop',\n      component: DropComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'edit/:listId',\n      component: EditComponent,\n      canActivate: [RoutingGuardGuard]\n    }, // { path: 'item/:listId/:list_creator/:position_id', component: ItemDetailsComponent},\n    {\n      path: 'item/:listId/:list_creator/:item_id',\n      component: ItemDetailsComponent\n    }, {\n      path: 'listdetails/:listId/:list_creator',\n      component: ListDetailsComponent\n    }, {\n      path: 'longlist/:listId',\n      component: LonglistComponent\n    }, {\n      path: 'lists/:listId',\n      component: ListComponent\n    }, {\n      path: 'my-stuff',\n      component: SavedComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'my-stuff/drops',\n      component: DropsComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'my-stuff/chapters',\n      component: ChaptersComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'my-stuff/profile',\n      component: ProfileComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'my-stuff/notifications',\n      component: NotificationsComponent,\n      canActivate: [RoutingGuardGuard]\n    }, {\n      path: 'profile/:user',\n      component: UserComponent\n    }, {\n      path: 'register',\n      component: RegisterComponent\n    }, {\n      path: 'register/almost-done/:email/:username',\n      component: RegisterAlmostDoneComponent\n    }, {\n      path: 'register/check-mail',\n      component: RegisterCheckMailComponent\n    }, {\n      path: 'forgotpassword',\n      component: PasswordForgotComponent\n    }, {\n      path: 'changepassword/:username/:email/:token',\n      component: PasswordUpdateComponent\n    }, {\n      path: 'confirm/:email/:token',\n      component: RegisterSuccessComponent\n    }, {\n      path: 'login',\n      component: LoginComponent\n    }, {\n      path: 'chapter/:chapter',\n      component: ChapterComponent\n    }, {\n      path: 'search/:search_term',\n      component: SearchComponent\n    }, {\n      path: 'search',\n      component: SearchComponent\n    }, {\n      path: 'support',\n      component: SupportComponent\n    }, {\n      path: 'marketing',\n      component: MarketingComponent\n    }, {\n      path: 'privacy-policy',\n      component: PrivacypolicyComponent\n    }], {\n      initialNavigation: 'enabledNonBlocking'\n    }), HttpClientModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }), BrowserAnimationsModule, ModalModule.forRoot(), provideFirebaseApp(() => initializeApp(environment.firebase)), provideMessaging(() => getMessaging()) // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n    ], ReactiveFormsModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}